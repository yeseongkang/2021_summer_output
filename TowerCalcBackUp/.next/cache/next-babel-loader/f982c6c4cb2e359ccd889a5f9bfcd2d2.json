{"ast":null,"code":"var _jsxFileName = \"/Users/jwlk/NodeProject/TowerCalc/components/AppLayout.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Col, Input, Menu, Row, Tabs } from 'antd';\nconst {\n  TabPane\n} = Tabs;\nimport { useSelector } from 'react-redux';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport MainPageHeader from \"./Header/MainPageHeader\"; // import MainPageContents from \"./MainPage/MainPageContents\";\n\nconst Global = createGlobalStyle`\n  body {\n    background-color: #fff;\n  }\n\n  .ant-row {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n\n  .ant-col:first-child {\n    padding-left: 0 !important;\n  }\n\n  .ant-col:last-child {\n    padding-right: 0 !important;\n  }\n`;\nconst ContentsWrapper = styled.div`\n  position: relative;\n  max-width: 1800px;\n  padding-right: 60px;\n  padding-left: 60px;\n  margin: 0 auto;\n  z-index: -1;\n`;\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  return __jsx(React.Fragment, null, __jsx(MainPageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), __jsx(ContentsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, children));\n};\n\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"sources":["/Users/jwlk/NodeProject/TowerCalc/components/AppLayout.js"],"names":["React","Link","PropTypes","Col","Input","Menu","Row","Tabs","TabPane","useSelector","styled","createGlobalStyle","MainPageHeader","Global","ContentsWrapper","div","AppLayout","children","isLoggedIn","state","user","propTypes","node","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,MAA1C;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,IAApB;AACA,SAAQE,WAAR,QAA0B,aAA1B;AACA,OAAOC,MAAP,IAAgBC,iBAAhB,QAAwC,mBAAxC;AAEA,OAAOC,cAAP,MAA2B,yBAA3B,C,CACA;;AAEA,MAAMC,MAAM,GAAGF,iBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAkBA,MAAMG,eAAe,GAAGJ,MAAM,CAACK,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC9B,QAAM;AAACC,IAAAA;AAAD,MAAeT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAhC;AACA,SACI,4BAEI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CAHJ,CADJ;AASH,CAXD;;AAaAD,SAAS,CAACK,SAAV,GAAsB;AAClBJ,EAAAA,QAAQ,EAAEf,SAAS,CAACoB,IAAV,CAAeC;AADP,CAAtB;AAIA,eAAeP,SAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport {Col, Input, Menu, Row, Tabs} from 'antd';\n\nconst { TabPane } = Tabs;\nimport {useSelector} from 'react-redux';\nimport styled, {createGlobalStyle} from 'styled-components';\n\nimport MainPageHeader from \"./Header/MainPageHeader\";\n// import MainPageContents from \"./MainPage/MainPageContents\";\n\nconst Global = createGlobalStyle`\n  body {\n    background-color: #fff;\n  }\n\n  .ant-row {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n\n  .ant-col:first-child {\n    padding-left: 0 !important;\n  }\n\n  .ant-col:last-child {\n    padding-right: 0 !important;\n  }\n`;\nconst ContentsWrapper = styled.div`\n  position: relative;\n  max-width: 1800px;\n  padding-right: 60px;\n  padding-left: 60px;\n  margin: 0 auto;\n  z-index: -1;\n`;\n\nconst AppLayout = ({children}) => {\n    const {isLoggedIn} = useSelector(state => state.user);\n    return (\n        <>\n            {/* <Global/> */}\n            <MainPageHeader/>\n            <ContentsWrapper>\n                {children}\n            </ContentsWrapper>\n        </>\n    );\n};\n\nAppLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default AppLayout;\n"]},"metadata":{},"sourceType":"module"}